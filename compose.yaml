version: "3.8"

services:
    # postgres - Official Image | Docker Hub
    # https://hub.docker.com/_/postgres
    postgres:
        container_name: dc-postgres
        env_file:
            - postgres.env
        healthcheck:
            test: 
                - "CMD-SHELL"
                - "pg_isready --dbname $${POSTGRES_DB} --username $${POSTGRES_USER}"
            interval: 1s
            timeout: 1s
            retries: 5
            start_period: 5s
        image: postgres:alpine
        networks:
            - nw-postgres
        ports:
            - "5432:5432"
        restart: always
        tty: true
        volumes:
            - ./postgres-data:/var/lib/postgresql/data
            - ./postgres-initdb.d:/docker-entrypoint-initdb.d
    # Container Deployment â€” pgAdmin 4 7.1 documentation
    # https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
    pgadmin4:
        container_name: dc-postgres-pgadmin4
        depends_on:
            postgres:
                condition: service_healthy
        env_file:
            - postgres-pgadmin4.env
        image: dpage/pgadmin4:latest
        networks:
            - nw-postgres
        ports:
            - "80:80"
            - "443:443"
        restart: always
        tty: true
        volumes:
            - "./pgadmin-pgadmin:/var/lib/pgadmin"
            # - "./pgadmin-config_local.py:/pgadmin4/config_local.py"
            # - "./pgadmin-servers.json:/pgadmin4/servers.json"
            # - "./pgadmin-server.cert:/certs/server.cert"
            # - "./pgadmin-server.key:/certs/server.key"

networks:
    nw-postgres:
        driver: bridge
